/* BeginDocumentation
Name: hh_moto_booth_nestml - a motor neuron model in HH formalism.

Description:

 hh_moto_booth is an implementation of a spiking motor neuron using the Hodkin-Huxley
 formalism according to the article by Booth V. Please see references.

 Post-synaptic currents and Spike Detection are the same as in hh_psc_alpha

References:

 Muscle spindle feedback circuit
 https://senselab.med.yale.edu/ModelDB/showmodel.cshtml?model=189786

 Compartmental model of vertebrate motoneurons for Ca2+-dependent spiking and plateau potentials under pharmacological treatment.
 Booth V1, Rinzel J, Kiehn O.

Sends: SpikeEvent

Receives: SpikeEvent, CurrentEvent

Authors: Aleksei Sanin
SeeAlso: hh_psc_alpha

*/
neuron hh_moto_booth:
  state:
    r integer # number of steps in the current refractory phase
  end

  parameters:
    t_ref ms = 2.0ms         # Refractory period
    g_Na nS = 5000.0nS       # Sodium peak conductance
    g_L nS = 200.0nS         # Leak conductance
    g_K_rect nS = 30000.0nS  # Delayed Rectifier Potassium peak conductance
    g_Ca_N nS = 5000.0nS
    g_Ca_L nS = 10.0nS
    g_Ca_K nS = 30000.0nS
	Ca_out mmol = 2.0mmol    # Outside Calcium concentration
	C_m = 200.0pF            # Membrane capacitance
	e_Na = 50.0mV
	e_K = -80.0mV
	e_L	= -70.0mV

	# Sodium rate constants
	amA 1/ms = 0.4
	amB 1/ms = 66.0
	amC 1/ms = 5.0
	bmA 1/ms = 0.4
	bmB 1/ms = 32.0
	bmC 1/ms = 5.0

	# Nernst equation constants
	R_const (kg*m**2)/(s**2*K*mol) = 8.314472  # Gas constant
	F_const C/mol = 96485.34[C/mol]            # Faraday constant
	T_current K = 309.15K                      # 36 Celcius
  end

  internals:
    RefractoryCounts integer = steps(t_ref) # refractory time in steps
  end

  input:
      spikeInh pA <- inhibitory spike
      spikeExc pA <- excitatory spike
      currents <- current
  end

  output: spike

  update:
    U_old mV = V_m
    integrate_odes()
    # sending spikes: crossing 0 mV, pseudo-refractoriness and local maximum...
    if r > 0: # is refractory?
      r -= 1
    elif V_m > 0 mV and U_old > V_m: # threshold && maximum
      r = RefractoryCounts
      emit_spike()
    end

  end

end
